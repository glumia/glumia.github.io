<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>glumia&#39;s blog</title>
    <link>https://glumia.github.io/</link>
    <description>Recent content on glumia&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 21 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://glumia.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://glumia.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glumia.github.io/about/</guid>
      <description>I am a backend developer at Oval and a (hopefully not for long) student in computer engineering at PoliTo.
I like command line interfaces, unix-like operating systems, C, Python, lisps, vim, well written code/documentation and many other things.</description>
    </item>
    
    <item>
      <title>Clojure, Python, C: three programming languages, one algorithm</title>
      <link>https://glumia.github.io/blog/clojure-python-c-three-programming-languages-one-algorithm/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://glumia.github.io/blog/clojure-python-c-three-programming-languages-one-algorithm/</guid>
      <description>Too lazy to write something long and well tought now ¯\_(ツ)_/¯
Just a bit disappointed by how bad Clojure&amp;rsquo;s performance are (but hey, immutability is not free!) and by how damn difficult it is to improve them.
Update 23/06/20 I found out that the timing of the C version goes down to ~2ms if I just declare the variables as int and not unsigned int. That&amp;rsquo;s amazing!
Update 09/01/21 Half I year later I finally know why the version with signed integers actually takes less than the version with unsigned ints.</description>
    </item>
    
    <item>
      <title>The Levenshtein Distance</title>
      <link>https://glumia.github.io/blog/the-levenshtein-distance/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://glumia.github.io/blog/the-levenshtein-distance/</guid>
      <description>It&amp;rsquo;s fascinating how everything you can think of in computer science 9 times out of 10 was already thought and probably studied by someone else. Today I was thinking about a way to suggest corrections for addresses inserted by our customers when I started to imagine an algorithm that used the mathematical notion of &amp;lsquo;distance&amp;rsquo; (check &amp;lsquo;Metric (mathematics)&amp;rsquo; on Wikipedia 1 ) to give them some suggestions based on a set of valid addresses present on our DB.</description>
    </item>
    
    <item>
      <title>C and Assembly - Subtleties</title>
      <link>https://glumia.github.io/blog/c-and-assembly-subtleties/</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://glumia.github.io/blog/c-and-assembly-subtleties/</guid>
      <description>Should I write this int flag = 0;	# Boolean value, can only be 0 or 1 while(some_condition){ ... if(flag == 0) flag = 1; ... }  or int flag = 0; while(some_condition){ ... flag = 1; ... }  what performs better? While I was writing some C code I came up to this little question. In a while loop at a certain point we have to set a boolean flag&amp;rsquo;s value to 1.</description>
    </item>
    
    <item>
      <title>GOG Store - Overkill search</title>
      <link>https://glumia.github.io/blog/gog-store-overkill-search/</link>
      <pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://glumia.github.io/blog/gog-store-overkill-search/</guid>
      <description>I had 1.30 euro remaining on my GOG wallet and I had to use them before sept. 19 or I would lose them. So I started to search on the GOG Store for a game whose price would be less or equal to 1.30 euro and greater than 0€ (since I wasn&amp;rsquo;t searching a free game&amp;hellip;) but the default filters of the website&amp;rsquo;s search engine allowed me to filter only games whose price was less than 5€.</description>
    </item>
    
  </channel>
</rss>
